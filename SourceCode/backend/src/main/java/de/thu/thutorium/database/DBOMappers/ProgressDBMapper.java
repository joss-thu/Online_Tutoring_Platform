package de.thu.thutorium.database.DBOMappers;

import de.thu.thutorium.api.transferObjects.common.ProgressTO;
import de.thu.thutorium.database.dbObjects.CourseDBO;
import de.thu.thutorium.database.dbObjects.ProgressDBO;
import de.thu.thutorium.database.dbObjects.UserDBO;
import org.mapstruct.*;

/**
 * Mapper interface for converting between {@link ProgressTO} and {@link ProgressDBO}.
 *
 * <p>This interface uses MapStruct to map data transfer objects (DTOs) to database objects (DBOs)
 * and vice versa. The mapping configuration specifies how certain fields should be handled, such as
 * ignoring unmapped fields and handling nested objects.
 *
 * <p>Annotations used:
 *
 * <ul>
 *   <li>@Mapper: Marks this interface as a MapStruct mapper.
 *   <li>componentModel = "spring": Configures the mapper to be a Spring-managed bean.
 *   <li>unmappedTargetPolicy = ReportingPolicy.IGNORE: Ignores unmapped target properties to avoid
 *       build errors.
 *   <li>@Mapping: Customizes the mapping of specific fields, including nested fields and properties
 *       to ignore.
 * </ul>
 */
@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface ProgressDBMapper {
  /**
   * Maps a {@link ProgressTO} object to a {@link ProgressDBO} object.
   *
   * <p>Custom mapping configurations:
   *
   * <ul>
   *   <li>progressId: Ignored because it is auto-generated by the database.
   *   <li>student: The {@link UserDBO} instance is mapped to the "student" field in {@link
   *       ProgressDBO}.
   *   <li>course: The {@link CourseDBO} instance is mapped to the "course" field in {@link
   *       ProgressDBO}.
   * </ul>
   *
   * @param progressTO the {@link ProgressTO} object to map.
   * @param student the {@link UserDBO} instance representing the student.
   * @param course the {@link CourseDBO} instance representing the course.
   * @return the mapped {@link ProgressDBO} object.
   */
  @Mapping(target = "progressId", ignore = true) // Ignoring ID as it's generated
  @Mapping(target = "student", source = "student")
  @Mapping(target = "course", source = "course")
  ProgressDBO toEntity(ProgressTO progressTO, UserDBO student, CourseDBO course);
}
